// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositorio;

#nullable disable

namespace Repositorio.Migrations
{
    [DbContext(typeof(ContextoSql))]
    partial class ContextoSqlModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DepositoPromocion", b =>
                {
                    b.Property<int>("ListaPromocionesId")
                        .HasColumnType("int");

                    b.Property<int>("listaDepositosId")
                        .HasColumnType("int");

                    b.HasKey("ListaPromocionesId", "listaDepositosId");

                    b.HasIndex("listaDepositosId");

                    b.ToTable("DepositoPromocion");
                });

            modelBuilder.Entity("DepositoRangoDeFechas", b =>
                {
                    b.Property<int>("ListaDisponibilidadId")
                        .HasColumnType("int");

                    b.Property<int>("listaDepositosId")
                        .HasColumnType("int");

                    b.HasKey("ListaDisponibilidadId", "listaDepositosId");

                    b.HasIndex("listaDepositosId");

                    b.ToTable("DepositoRangoDeFechas");
                });

            modelBuilder.Entity("Dominio.Deposito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Area")
                        .HasColumnType("int");

                    b.Property<bool>("Climatizacion")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tamanio")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Depositos");
                });

            modelBuilder.Entity("Dominio.Pago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Pago");
                });

            modelBuilder.Entity("Dominio.Promocion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Etiqueta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PorcentajeDescuento")
                        .HasColumnType("int");

                    b.Property<int>("rangoFechasId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("rangoFechasId");

                    b.ToTable("Promociones");
                });

            modelBuilder.Entity("Dominio.RangoDeFechas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RangoDeFechas");
                });

            modelBuilder.Entity("Dominio.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<int>("DepositoId")
                        .HasColumnType("int");

                    b.Property<bool>("EstadoAprobacionAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("EstadoAprobacionCliente")
                        .HasColumnType("bit");

                    b.Property<string>("MotivoRechazo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PagoId")
                        .HasColumnType("int");

                    b.Property<int>("RangoDeFechasId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DepositoId");

                    b.HasIndex("PagoId");

                    b.HasIndex("RangoDeFechasId");

                    b.HasIndex("UsuarioEmail");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("Dominio.Usuario", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RolDeUsuario")
                        .HasColumnType("int");

                    b.Property<string>("VerificacionContrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Email");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("DepositoPromocion", b =>
                {
                    b.HasOne("Dominio.Promocion", null)
                        .WithMany()
                        .HasForeignKey("ListaPromocionesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Deposito", null)
                        .WithMany()
                        .HasForeignKey("listaDepositosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DepositoRangoDeFechas", b =>
                {
                    b.HasOne("Dominio.RangoDeFechas", null)
                        .WithMany()
                        .HasForeignKey("ListaDisponibilidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Deposito", null)
                        .WithMany()
                        .HasForeignKey("listaDepositosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.Promocion", b =>
                {
                    b.HasOne("Dominio.RangoDeFechas", "rangoFechas")
                        .WithMany()
                        .HasForeignKey("rangoFechasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("rangoFechas");
                });

            modelBuilder.Entity("Dominio.Reserva", b =>
                {
                    b.HasOne("Dominio.Deposito", "Deposito")
                        .WithMany()
                        .HasForeignKey("DepositoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Pago", "Pago")
                        .WithMany()
                        .HasForeignKey("PagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.RangoDeFechas", "RangoDeFechas")
                        .WithMany()
                        .HasForeignKey("RangoDeFechasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Usuario", "Usuario")
                        .WithMany("listaReservas")
                        .HasForeignKey("UsuarioEmail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deposito");

                    b.Navigation("Pago");

                    b.Navigation("RangoDeFechas");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Dominio.Usuario", b =>
                {
                    b.Navigation("listaReservas");
                });
#pragma warning restore 612, 618
        }
    }
}
